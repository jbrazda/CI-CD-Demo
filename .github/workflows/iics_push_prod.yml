name: Deploy PROD Push
  # Following Project Secrets must be defined in the CI/CD Configuration
  # IICS_PROD_ORG_USER
  # IICS_PROD_ORG_PWD
  # AWS_ACCESS_KEY_ID 
  # AWS_SECRET_ACCESS_KEY

on:
  # Trigger the workflow on push request,
  # but only for the defined branch
  # ignore changes to listed paths
  push:
    branches:
      - master
    paths-ignore:
      - '.vscode/**'
      - '/doc/**'
      - '/sample-data/**'
      - '**.md'
      - '.ant_targets'
      - '.project'
      - 'update_publish_all_config.sh'
jobs:
  build_all:
    runs-on: ubuntu-latest
    name: Build Deployment Packages
    env:
      IICS_PACKAGE_CONFIG: './conf/all_exclude_connections.package.txt'
      IICS_PUBLISH_CONFIG: './conf/all_designs.publish.txt'
      IICS_TRANSFORM_CONFIG_DEV: '../../../conf/dev.transform.properties'
      IICS_TRANSFORM_CONFIG_TEST: '../../../conf/test.transform.properties'
      IICS_TRANSFORM_CONFIG_PROD: '../../../conf/prod.transform.properties'
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 11
    - name: Package Dev # Package DEV Package
      run: |
        ant package.src \
        -Diics.release=./conf/iics.release.properties \
        -Diics.target.environment=dev \
        -Diics.target.package.config=${{ env.IICS_PACKAGE_CONFIG }} \
        -Diics.package.transform.config=${{ emv.IICS_TRANSFORM_CONFIG_DEV }} \
        -Dtools.reporting.disabled=true \
        -Dtools.transform.disabled=true
    - name: Package Test # Package TEST Package
      run: |
        ant package.src \
        -Diics.release=./conf/iics.release.properties \
        -Diics.target.environment=test \
        -Diics.target.package.config=${{ env.IICS_PACKAGE_CONFIG }} \
        -Diics.package.transform.config=${{ emv.IICS_TRANSFORM_CONFIG_TEST }} \
        -Dtools.reporting.disabled=true \
        -Dtools.transform.disabled=true
    - name: Package Prod # Package PROD Package
      run: |
        ant package.src \
        -Diics.release=./conf/iics.release.properties \
        -Diics.target.environment=prod \
        -Diics.target.package.config=${{ env.IICS_PACKAGE_CONFIG }} \
        -Diics.package.transform.config=${{ emv.IICS_TRANSFORM_CONFIG_PROD }} \
        -Dtools.reporting.disabled=true \
        -Dtools.transform.disabled=true
    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build_packages
        path: target/iics
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
## DEPLOY Jobs
  deploy_dev:
    runs-on: ubuntu-latest
    environment: dev
    env:
      IICS_USER_NAME: ${{ vars.IICS_ORG_USER_DEV }}
      IICS_USER_PWD: ${{ secrets.IICS_ORG_PWD_DEV }}
      IICS_TARGET_ENVIRONMENT: dev
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 11
    - name: Backup Assets From Target Org
      run: |
        ant download.src \
        -Diics.user.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_NAME }}" \
        -Diics.password.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_PWD }}" \
        -Diics.release=./conf/iics.release.properties \
        -Diics.export.list.location=./conf/export_list.txt \
        -Diics.source.environment=${{ env.IICS_TARGET_ENVIRONMENT }} \
        -Dtools.reporting.disabled=true
    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backup_dev
        path: target/iics
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build_packages
        path: target/iics
    - name: Import Assets
      run: |
        ant import \
        -Diics.user.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_NAME }}" \
        -Diics.password.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_PWD }}" \
        -Diics.release=./conf/iics.release.properties \
        -Diics.target.environment=${{ env.IICS_TARGET_ENVIRONMENT }} \
        -Dtools.reporting.disabled=true \
        -Dtools.transform.disabled=true
    - name: Publish Assets
      run: |
        ant publish \
        -Diics.user.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_NAME }}" \
        -Diics.password.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_PWD }}" \
        -Diics.release=./conf/iics.release.properties \
        -Diics.target.environment=${{ env.IICS_TARGET_ENVIRONMENT }} \
        -Diics.target.publish.config=${{ github.event.inputs.publish_config }} \
        -Dtools.reporting.disabled=true \
        -Dtools.transform.disabled=true
  deploy_test:
    runs-on: ubuntu-latest
    environment: test
    env:
      IICS_USER_NAME: ${{ vars.IICS_ORG_USER_TEST }}
      IICS_USER_PWD: ${{ secrets.IICS_ORG_PWD_TEST }}
      IICS_TARGET_ENVIRONMENT: test
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 11
    - name: Backup Assets From Target Org
      run: |
        ant download.src \
        -Diics.user.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_NAME }}" \
        -Diics.password.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_PWD }}" \
        -Diics.release=./conf/iics.release.properties \
        -Diics.export.list.location=./conf/export_list.txt \
        -Diics.source.environment=${{ env.IICS_TARGET_ENVIRONMENT }} \
        -Dtools.reporting.disabled=true
    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backup_test
        path: target/iics
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build_packages
        path: target/iics
    - name: Import Assets
      run: |
        ant import \
        -Diics.user.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_NAME }}" \
        -Diics.password.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_PWD }}" \
        -Diics.release=./conf/iics.release.properties \
        -Diics.target.environment=${{ env.IICS_TARGET_ENVIRONMENT }} \
        -Dtools.reporting.disabled=true \
        -Dtools.transform.disabled=true
    - name: Publish Assets
      run: |
        ant publish \
        -Diics.user.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_NAME }}" \
        -Diics.password.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_PWD }}" \
        -Diics.release=./conf/iics.release.properties \
        -Diics.target.environment=${{ env.IICS_TARGET_ENVIRONMENT }} \
        -Diics.target.publish.config=${{ github.event.inputs.publish_config }} \
        -Dtools.reporting.disabled=true \
        -Dtools.transform.disabled=true

  deploy_prod:
    runs-on: ubuntu-latest
    environment: prod
    env:
      IICS_USER_NAME: ${{ vars.IICS_ORG_USER_PROD }}
      IICS_USER_PWD: ${{ secrets.IICS_ORG_PWD_PROD }}
      IICS_TARGET_ENVIRONMENT: prod
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 11
    - name: Backup Assets From Target Org
      run: |
        ant download.src \
        -Diics.user.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_NAME }}" \
        -Diics.password.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_PWD }}" \
        -Diics.release=./conf/iics.release.properties \
        -Diics.export.list.location=./conf/export_list.txt \
        -Diics.source.environment=${{ env.IICS_TARGET_ENVIRONMENT }} \
        -Dtools.reporting.disabled=true
    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backup_prod
        path: target/iics
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build_packages
        path: target/iics
    - name: Import Assets
      run: |
        ant import \
        -Diics.user.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_NAME }}" \
        -Diics.password.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_PWD }}" \
        -Diics.release=./conf/iics.release.properties \
        -Diics.target.environment=${{ env.IICS_TARGET_ENVIRONMENT }} \
        -Dtools.reporting.disabled=true \
        -Dtools.transform.disabled=true
    - name: Publish Assets
      run: |
        ant publish \
        -Diics.user.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_NAME }}" \
        -Diics.password.${{ env.IICS_TARGET_ENVIRONMENT }}="${{ env.IICS_USER_PWD }}" \
        -Diics.release=./conf/iics.release.properties \
        -Diics.target.environment=${{ env.IICS_TARGET_ENVIRONMENT }} \
        -Diics.target.publish.config=${{ github.event.inputs.publish_config }} \
        -Dtools.reporting.disabled=true \
        -Dtools.transform.disabled=true